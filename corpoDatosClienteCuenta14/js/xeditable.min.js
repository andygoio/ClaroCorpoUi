angular.module("xeditable",[]).value("editableOptions",{theme:"default",buttons:"right",blurElem:"cancel",blurForm:"ignore",activate:"focus"}),angular.module("xeditable").directive("editableBsdate",["editableDirectiveFactory",function(e){return e({directiveName:"editableBsdate",inputTpl:'<input type="text">'})}]),angular.module("xeditable").directive("editableBstime",["editableDirectiveFactory",function(e){return e({directiveName:"editableBstime",inputTpl:"<timepicker></timepicker>",render:function(){this.parent.render.call(this);var e=angular.element('<div class="well well-small" style="display:inline-block;"></div>');e.attr("ng-model",this.inputEl.attr("ng-model")),this.inputEl.removeAttr("ng-model"),this.attrs.eNgChange&&(e.attr("ng-change",this.inputEl.attr("ng-change")),this.inputEl.removeAttr("ng-change")),this.inputEl.wrap(e)}})}]),angular.module("xeditable").directive("editableCheckbox",["editableDirectiveFactory",function(e){return e({directiveName:"editableCheckbox",inputTpl:'<input type="checkbox">',render:function(){this.parent.render.call(this),this.attrs.eTitle&&(this.inputEl.wrap("<label></label>"),this.inputEl.after(angular.element("<span></span>").text(this.attrs.eTitle)))},autosubmit:function(){var e=this;e.inputEl.bind("change",function(){setTimeout(function(){e.scope.$apply(function(){e.scope.$form.$submit()})},500)})}})}]),angular.module("xeditable").directive("editableChecklist",["editableDirectiveFactory","editableNgOptionsParser",function(e,t){return e({directiveName:"editableChecklist",inputTpl:"<span></span>",useCopy:!0,render:function(){this.parent.render.call(this);var e=t(this.attrs.eNgOptions),n='<label ng-repeat="'+e.ngRepeat+'"><input type="checkbox" checklist-model="$parent.$data" checklist-value="'+e.locals.valueFn+'"><span ng-bind="'+e.locals.displayFn+'"></span></label>';this.inputEl.removeAttr("ng-model"),this.inputEl.removeAttr("ng-options"),this.inputEl.html(n)}})}]),function(){var e="text|email|tel|number|url|search|color|date|datetime|time|month|week".split("|");angular.forEach(e,function(e){var t="editable"+e.charAt(0).toUpperCase()+e.slice(1);angular.module("xeditable").directive(t,["editableDirectiveFactory",function(n){return n({directiveName:t,inputTpl:'<input type="'+e+'">'})}])}),angular.module("xeditable").directive("editableRange",["editableDirectiveFactory",function(e){return e({directiveName:"editableRange",inputTpl:'<input type="range" id="range" name="range">',render:function(){this.parent.render.call(this),this.inputEl.after("<output>{{$data}}</output>")}})}])}(),angular.module("xeditable").directive("editableRadiolist",["editableDirectiveFactory","editableNgOptionsParser",function(e,t){return e({directiveName:"editableRadiolist",inputTpl:"<span></span>",render:function(){this.parent.render.call(this);var e=t(this.attrs.eNgOptions),n='<label ng-repeat="'+e.ngRepeat+'"><input type="radio" ng-model="$parent.$data" value="{{'+e.locals.valueFn+'}}"><span ng-bind="'+e.locals.displayFn+'"></span></label>';this.inputEl.removeAttr("ng-model"),this.inputEl.removeAttr("ng-options"),this.inputEl.html(n)},autosubmit:function(){var e=this;e.inputEl.bind("change",function(){setTimeout(function(){e.scope.$apply(function(){e.scope.$form.$submit()})},500)})}})}]),angular.module("xeditable").directive("editableSelect",["editableDirectiveFactory",function(e){return e({directiveName:"editableSelect",inputTpl:"<select></select>",autosubmit:function(){var e=this;e.inputEl.bind("change",function(){e.scope.$apply(function(){e.scope.$form.$submit()})})}})}]),angular.module("xeditable").directive("editableTextarea",["editableDirectiveFactory",function(e){return e({directiveName:"editableTextarea",inputTpl:"<textarea></textarea>",addListeners:function(){var e=this;e.parent.addListeners.call(e),e.single&&"no"!==e.buttons&&e.autosubmit()},autosubmit:function(){var e=this;e.inputEl.bind("keydown",function(t){(t.ctrlKey||t.metaKey)&&13===t.keyCode&&e.scope.$apply(function(){e.scope.$form.$submit()})})}})}]),angular.module("xeditable").factory("editableController",["$q","editableUtils",function(e,t){function n(e,n,i,a,r,l,o,s,u){var c,d,f=this;f.scope=e,f.elem=i,f.attrs=n,f.inputEl=null,f.editorEl=null,f.single=!0,f.error="",f.theme=r[l.theme]||r["default"],f.parent={},f.inputTpl="",f.directiveName="",f.useCopy=!1,f.single=null,f.buttons="right",f.init=function(t){if(f.single=t,f.name=n.eName||n[f.directiveName],!n[f.directiveName])throw"You should provide value for `"+f.directiveName+"` in editable element!";c=a(n[f.directiveName]),f.buttons=f.single?f.attrs.buttons||l.buttons:"no",n.eName&&f.scope.$watch("$data",function(e){f.scope.$form.$data[n.eName]=e}),n.onshow&&(f.onshow=function(){return f.catchError(a(n.onshow)(e))}),n.onhide&&(f.onhide=function(){return a(n.onhide)(e)}),n.oncancel&&(f.oncancel=function(){return a(n.oncancel)(e)}),n.onbeforesave&&(f.onbeforesave=function(){return f.catchError(a(n.onbeforesave)(e))}),n.onaftersave&&(f.onaftersave=function(){return f.catchError(a(n.onaftersave)(e))}),e.$parent.$watch(n[f.directiveName],function(){f.handleEmpty()})},f.render=function(){var e=f.theme;f.inputEl=angular.element(f.inputTpl),f.controlsEl=angular.element(e.controlsTpl),f.controlsEl.append(f.inputEl),"no"!==f.buttons&&(f.buttonsEl=angular.element(e.buttonsTpl),f.submitEl=angular.element(e.submitTpl),f.cancelEl=angular.element(e.cancelTpl),f.buttonsEl.append(f.submitEl).append(f.cancelEl),f.controlsEl.append(f.buttonsEl),f.inputEl.addClass("editable-has-buttons")),f.errorEl=angular.element(e.errorTpl),f.controlsEl.append(f.errorEl),f.editorEl=angular.element(f.single?e.formTpl:e.noformTpl),f.editorEl.append(f.controlsEl);for(var i in n.$attr)if(!(i.length<=1)){var a=!1,r=i.substring(1,2);if("e"===i.substring(0,1)&&r===r.toUpperCase()&&(a=i.substring(1),"Form"!==a&&"NgSubmit"!==a)){a=a.substring(0,1).toLowerCase()+t.camelToDash(a.substring(1));var o=""===n[i]?a:n[i];f.inputEl.attr(a,o)}}f.inputEl.addClass("editable-input"),f.inputEl.attr("ng-model","$data"),f.editorEl.addClass(t.camelToDash(f.directiveName)),f.single&&(f.editorEl.attr("editable-form","$form"),f.editorEl.attr("blur",f.attrs.blur||("no"===f.buttons?"cancel":l.blurElem))),angular.isFunction(e.postrender)&&e.postrender.call(f)},f.setLocalValue=function(){f.scope.$data=f.useCopy?angular.copy(c(e.$parent)):c(e.$parent)},f.show=function(){return f.setLocalValue(),f.render(),i.after(f.editorEl),s(f.editorEl)(e),f.addListeners(),i.addClass("editable-hide"),f.onshow()},f.hide=function(){return f.editorEl.remove(),i.removeClass("editable-hide"),f.onhide()},f.cancel=function(){f.oncancel()},f.addListeners=function(){f.inputEl.bind("keyup",function(e){if(f.single)switch(e.keyCode){case 27:f.scope.$apply(function(){f.scope.$form.$cancel()})}}),f.single&&"no"===f.buttons&&f.autosubmit(),f.editorEl.bind("click",function(e){1===e.which&&f.scope.$form.$visible&&(f.scope.$form._clicked=!0)})},f.setWaiting=function(e){e?(d=!f.inputEl.attr("disabled")&&!f.inputEl.attr("ng-disabled")&&!f.inputEl.attr("ng-enabled"),d&&(f.inputEl.attr("disabled","disabled"),f.buttonsEl&&f.buttonsEl.find("button").attr("disabled","disabled"))):d&&(f.inputEl.removeAttr("disabled"),f.buttonsEl&&f.buttonsEl.find("button").removeAttr("disabled"))},f.activate=function(){setTimeout(function(){var e=f.inputEl[0];"focus"===l.activate&&e.focus&&e.focus(),"select"===l.activate&&e.select&&e.select()},0)},f.setError=function(t){angular.isObject(t)||(e.$error=t,f.error=t)},f.catchError=function(e,t){return angular.isObject(e)&&t!==!0?u.when(e).then(angular.bind(this,function(e){this.catchError(e,!0)}),angular.bind(this,function(e){this.catchError(e,!0)})):t&&angular.isObject(e)&&e.status&&200!==e.status&&e.data&&angular.isString(e.data)?(this.setError(e.data),e=e.data):angular.isString(e)&&this.setError(e),e},f.save=function(){c.assign(e.$parent,angular.copy(f.scope.$data))},f.handleEmpty=function(){var t=c(e.$parent),n=null===t||void 0===t||""===t||angular.isArray(t)&&0===t.length;i.toggleClass("editable-empty",n)},f.autosubmit=angular.noop,f.onshow=angular.noop,f.onhide=angular.noop,f.oncancel=angular.noop,f.onbeforesave=angular.noop,f.onaftersave=angular.noop}return n.$inject=["$scope","$attrs","$element","$parse","editableThemes","editableOptions","$rootScope","$compile","$q"],n}]),angular.module("xeditable").factory("editableDirectiveFactory",["$parse","$compile","editableThemes","$rootScope","$document","editableController","editableFormController",function(e,t,n,i,a,r,l){return function(t){return{restrict:"A",scope:!0,require:[t.directiveName,"?^form"],controller:r,link:function(n,r,o,s){var c,u=s[0],d=!1;if(s[1])c=s[1],d=!0;else if(o.eForm){var f=e(o.eForm)(n);if(f)c=f,d=!0;else for(var b=0;b<a[0].forms.length;b++)if(a[0].forms[b].name===o.eForm){c=null,d=!0;break}}if(angular.forEach(t,function(e,t){void 0!==u[t]&&(u.parent[t]=u[t])}),angular.extend(u,t),u.init(!d),n.$editable=u,r.addClass("editable"),d)if(c){if(n.$form=c,!n.$form.$addEditable)throw"Form with editable elements should have `editable-form` attribute.";n.$form.$addEditable(u)}else i.$$editableBuffer=i.$$editableBuffer||{},i.$$editableBuffer[o.eForm]=i.$$editableBuffer[o.eForm]||[],i.$$editableBuffer[o.eForm].push(u),n.$form=null;else n.$form=l(),n.$form.$addEditable(u),o.eForm&&(n.$parent[o.eForm]=n.$form),o.eForm||(r.addClass("editable-click"),r.bind("click",function(e){e.preventDefault(),e.editable=u,n.$apply(function(){n.$form.$show()})}))}}}}]),angular.module("xeditable").factory("editableFormController",["$parse","$document","$rootScope","editablePromiseCollection","editableUtils",function(e,t,n,i,a){var r=[];t.bind("click",function(e){if(1===e.which){for(var t=[],i=[],a=0;a<r.length;a++)r[a]._clicked?r[a]._clicked=!1:r[a].$waiting||("cancel"===r[a]._blur&&t.push(r[a]),"submit"===r[a]._blur&&i.push(r[a]));(t.length||i.length)&&n.$apply(function(){angular.forEach(t,function(e){e.$cancel()}),angular.forEach(i,function(e){e.$submit()})})}});var l={$addEditable:function(e){this.$editables.push(e),e.elem.bind("$destroy",angular.bind(this,this.$removeEditable,e)),e.scope.$form||(e.scope.$form=this),this.$visible&&e.catchError(e.show())},$removeEditable:function(e){for(var t=0;t<this.$editables.length;t++)if(this.$editables[t]===e)return void this.$editables.splice(t,1)},$show:function(){if(!this.$visible){this.$visible=!0;var e=i();e.when(this.$onshow()),this.$setError(null,""),angular.forEach(this.$editables,function(t){e.when(t.show())}),e.then({onWait:angular.bind(this,this.$setWaiting),onTrue:angular.bind(this,this.$activate),onFalse:angular.bind(this,this.$activate),onString:angular.bind(this,this.$activate)}),setTimeout(angular.bind(this,function(){this._clicked=!1,-1===a.indexOf(r,this)&&r.push(this)}),0)}},$activate:function(e){var t;if(this.$editables.length){if(angular.isString(e))for(t=0;t<this.$editables.length;t++)if(this.$editables[t].name===e)return void this.$editables[t].activate();for(t=0;t<this.$editables.length;t++)if(this.$editables[t].error)return void this.$editables[t].activate();this.$editables[0].activate()}},$hide:function(){this.$visible&&(this.$visible=!1,this.$onhide(),angular.forEach(this.$editables,function(e){e.hide()}),a.arrayRemove(r,this))},$cancel:function(){this.$visible&&(this.$oncancel(),angular.forEach(this.$editables,function(e){e.cancel()}),this.$hide())},$setWaiting:function(e){this.$waiting=!!e,angular.forEach(this.$editables,function(t){t.setWaiting(!!e)})},$setError:function(e,t){angular.forEach(this.$editables,function(n){e&&n.name!==e||n.setError(t)})},$submit:function(){function t(e){var t=i();t.when(this.$onbeforesave()),t.then({onWait:angular.bind(this,this.$setWaiting),onTrue:e?angular.bind(this,this.$save):angular.bind(this,this.$hide),onFalse:angular.bind(this,this.$hide),onString:angular.bind(this,this.$activate)})}if(!this.$waiting){this.$setError(null,"");var e=i();angular.forEach(this.$editables,function(t){e.when(t.onbeforesave())}),e.then({onWait:angular.bind(this,this.$setWaiting),onTrue:angular.bind(this,t,!0),onFalse:angular.bind(this,t,!1),onString:angular.bind(this,this.$activate)})}},$save:function(){angular.forEach(this.$editables,function(e){e.save()});var e=i();e.when(this.$onaftersave()),angular.forEach(this.$editables,function(t){e.when(t.onaftersave())}),e.then({onWait:angular.bind(this,this.$setWaiting),onTrue:angular.bind(this,this.$hide),onFalse:angular.bind(this,this.$hide),onString:angular.bind(this,this.$activate)})},$onshow:angular.noop,$oncancel:angular.noop,$onhide:angular.noop,$onbeforesave:angular.noop,$onaftersave:angular.noop};return function(){return angular.extend({$editables:[],$visible:!1,$waiting:!1,$data:{},_clicked:!1,_blur:null},l)}}]),angular.module("xeditable").directive("editableForm",["$rootScope","$parse","editableFormController","editableOptions",function(e,t,n,i){return{restrict:"A",require:["form"],compile:function(){return{pre:function(t,i,a,r){var o,l=r[0];a.editableForm?t[a.editableForm]&&t[a.editableForm].$show?(o=t[a.editableForm],angular.extend(l,o)):(o=n(),t[a.editableForm]=o,angular.extend(o,l)):(o=n(),angular.extend(l,o));var s=e.$$editableBuffer,u=l.$name;u&&s&&s[u]&&(angular.forEach(s[u],function(e){o.$addEditable(e)}),delete s[u])},post:function(e,n,a,r){var l;l=a.editableForm&&e[a.editableForm]&&e[a.editableForm].$show?e[a.editableForm]:r[0],a.onshow&&(l.$onshow=angular.bind(l,t(a.onshow),e)),a.onhide&&(l.$onhide=angular.bind(l,t(a.onhide),e)),a.oncancel&&(l.$oncancel=angular.bind(l,t(a.oncancel),e)),a.shown&&t(a.shown)(e)&&l.$show(),l._blur=a.blur||i.blurForm,a.ngSubmit||a.submit||(a.onbeforesave&&(l.$onbeforesave=function(){return t(a.onbeforesave)(e,{$data:l.$data})}),a.onaftersave&&(l.$onaftersave=function(){return t(a.onaftersave)(e,{$data:l.$data})}),n.bind("submit",function(t){t.preventDefault(),e.$apply(function(){l.$submit()})})),n.bind("click",function(e){1===e.which&&l.$visible&&(l._clicked=!0)})}}}}}]),angular.module("xeditable").factory("editablePromiseCollection",["$q",function(e){function t(){return{promises:[],hasFalse:!1,hasString:!1,when:function(t,n){if(t===!1)this.hasFalse=!0;else if(!n&&angular.isObject(t))this.promises.push(e.when(t));else{if(!angular.isString(t))return;this.hasString=!0}},then:function(t){function o(){l.hasString||l.hasFalse?!l.hasString&&l.hasFalse?i():a():n()}t=t||{};var n=t.onTrue||angular.noop,i=t.onFalse||angular.noop,a=t.onString||angular.noop,r=t.onWait||angular.noop,l=this;this.promises.length?(r(!0),e.all(this.promises).then(function(e){r(!1),angular.forEach(e,function(e){l.when(e,!0)}),o()},function(){r(!1),a()})):o()}}}return t}]),angular.module("xeditable").factory("editableUtils",[function(){return{indexOf:function(e,t){if(e.indexOf)return e.indexOf(t);for(var n=0;n<e.length;n++)if(t===e[n])return n;return-1},arrayRemove:function(e,t){var n=this.indexOf(e,t);return n>=0&&e.splice(n,1),t},camelToDash:function(e){var t=/[A-Z]/g;return e.replace(t,function(e,t){return(t?"-":"")+e.toLowerCase()})},dashToCamel:function(e){var t=/([\:\-\_]+(.))/g,n=/^moz([A-Z])/;return e.replace(t,function(e,t,n,i){return i?n.toUpperCase():n}).replace(n,"Moz$1")}}}]),angular.module("xeditable").factory("editableNgOptionsParser",[function(){function t(t){var n;if(!(n=t.match(e)))throw"ng-options parse error";var d,i=n[2]||n[1],a=n[4]||n[6],r=n[5],o=(n[3]||"",n[2]?n[1]:a),s=n[7],u=n[8],c=u?n[8]:null;return void 0===r?(d=a+" in "+s,void 0!==u&&(d+=" track by "+c)):d="("+r+", "+a+") in "+s,{ngRepeat:d,locals:{valueName:a,keyName:r,valueFn:o,displayFn:i}}}var e=/^\s*(.*?)(?:\s+as\s+(.*?))?(?:\s+group\s+by\s+(.*))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+(.*?)(?:\s+track\s+by\s+(.*?))?$/;return t}]),angular.module("xeditable").factory("editableThemes",function(){var e={"default":{formTpl:'<form class="editable-wrap"></form>',noformTpl:'<span class="editable-wrap"></span>',controlsTpl:'<span class="editable-controls"></span>',inputTpl:"",errorTpl:'<div class="editable-error" ng-show="$error" ng-bind="$error"></div>',buttonsTpl:'<span class="editable-buttons"></span>',submitTpl:'<button type="submit">save</button>',cancelTpl:'<button type="button" ng-click="$form.$cancel()">cancel</button>'},bs2:{formTpl:'<form class="form-inline editable-wrap" role="form"></form>',noformTpl:'<span class="editable-wrap"></span>',controlsTpl:'<div class="editable-controls controls control-group" ng-class="{\'error\': $error}"></div>',inputTpl:"",errorTpl:'<div class="editable-error help-block" ng-show="$error" ng-bind="$error"></div>',buttonsTpl:'<span class="editable-buttons"></span>',submitTpl:'<button type="submit" class="btn btn-primary"><span class="icon-ok icon-white"></span></button>',cancelTpl:'<button type="button" class="btn" ng-click="$form.$cancel()"><span class="icon-remove"></span></button>'},bs3:{formTpl:'<form class="form-inline editable-wrap" role="form"></form>',noformTpl:'<span class="editable-wrap"></span>',controlsTpl:'<div class="editable-controls form-group" ng-class="{\'has-error\': $error}"></div>',inputTpl:"",errorTpl:'<div class="editable-error help-block" ng-show="$error" ng-bind="$error"></div>',buttonsTpl:'<span class="editable-buttons"></span>',submitTpl:'<button type="submit" class="btn btn-primary waves-effect waves-button waves-float"><span class="glyphicon glyphicon-ok"></span></button>',cancelTpl:'<button type="button" class="btn btn-default waves-effect waves-button waves-float" ng-click="$form.$cancel()"><span class="glyphicon glyphicon-remove"></span></button>',buttonsClass:"",inputClass:"",postrender:function(){switch(this.directiveName){case"editableText":case"editableSelect":case"editableTextarea":case"editableEmail":case"editableTel":case"editableNumber":case"editableUrl":case"editableSearch":case"editableDate":case"editableDatetime":case"editableTime":case"editableMonth":case"editableWeek":if(this.inputEl.addClass("form-control"),this.theme.inputClass){if(this.inputEl.attr("multiple")&&("input-sm"===this.theme.inputClass||"input-lg"===this.theme.inputClass))break;this.inputEl.addClass(this.theme.inputClass)}}this.buttonsEl&&this.theme.buttonsClass&&this.buttonsEl.find("button").addClass(this.theme.buttonsClass)}}};return e});